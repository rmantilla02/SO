#!/bin/bash
LOGFILE=detector
LOGS_DIRECTORY=$LOGS
source ./log

# Moving files function.
function moveFile() {
    local dir=${1:? No arguments call}; shift
    if ! [ -d $dir ]; then
        echo "Argument 1 $1 was not a directory." >&2
    fi

    for file in $@; do
        local bn=$(basename $file)
        local dest="$dir/$bn"

        if [ -f $dest ]; then
            # A subdirectory dup is created if hte file already exists in Rejected files.
            mkdir --parents $dir/dup
            local dup=$(ls $dir/dup | grep "^[0-9][0-9]$bn" | tail --lines=1)
            local nro=${dup::2}
            nro=$(printf %02d $(($nro + 1)))
            dest="$dir/dup/$nro$bn"
        fi

        mv $file $dest
    done
}

# Rejects a file and log it.
# The second argument it's an optional log message.
function rejectFile() {
    moveFile $REJECTED ${1:?"No arguments reject call"}
}

function acceptFile() {
    moveFile $ACCEPTED ${1?"No arguments accept call"}
}

function processFile() {

    local name=$(basename $1)

    # echo "Process file: " $name

#   validamos que el archivo no esté vacío
    if ! [ -s $1 ]; then
        info "processFile" "Invalid file: empty file - $name"
        rejectFile $1 "empty file"; return;
    fi

    # validacion de nombre
    if ! [[ $name =~ [^_]+-[^_]+-[^_]+-[^_] ]]; then
        echo "Invalid file name"
        info "processFile" "Invalid file: invalid file name - $name"
        rejectFile $1 "invalid file name"; return;
    fi

    local noext=${name%.*}
    IFS='-' read -r -a array <<< "$noext"

    country=${array[0]}
    system=${array[1]}
    year=${array[2]}
    month=${array[3]}

    # Country and system validation.
    exist=false
    while read -r line; do
        IFS='-' read -r -a array <<< "$line"
        country_aux=${array[0]}
        system_aux=${array[2]}

        if [ $country = $country_aux ] && [ $system = $system_aux ]; then
            exist=true
            break
        fi

    done < $MASTER/p-s.mae

    # If the system is not present in the p-s.mae it's rejected.
    if [ "$exist" = "false" ]; then
        echo "The current file is not present in the system's master table."
        info "processFile" "Invalid file: file is not present in the system's master table. - $name"
        rejectFile $1 "update rejected"; return;
    fi

    if [ "$year" -lt 2016 ]; then
        echo "Year before 2016: " $year
        info "processFile" "Invalid file: Year before 2016 - $name"
        rejectFile $1 "update rejected"; return;
    fi

    # validacion de mes
    #echo "Month: " $month
    if [ "$month" -lt 1 ] || [ "$month" -gt 12 ]; then
        echo "Invalid month"
        info "processFile" "Invalid file: Invalid month - $name"
        rejectFile $1 "update rejected"; return;
    fi

    # valicacion de periodo
    # todo: sacar harcodeo del periodo
    if [ "$year" -gt 2017 ] && [ "$month" -gt 05 ]; then
        echo "Invalid period"
        info "processFile" "Invalid file: Invalid period - $name"
        rejectFile $1 "update rejected"; return;
    fi

    info "processFile" "Accepted file: $name"
    acceptFile $1
}

ITERATION=1
while true; do

    info "main" "Iteration N° + $ITERATION"

    # echo "Iteration: " $ITERATION

    ARRIVED_FILES=$(ls $ARRIVAL)
    for FILE in $ARRIVED_FILES; do processFile "$ARRIVAL/$FILE"; done

    ACCEPTED_FILES=$(ls $ACCEPTED)
    TRANSLATER_ACTIVATED=$(ps -ax | grep "translate" | grep -v "grep" | wc -l)
    if [ "$ACCEPTED_FILES" -a $TRANSLATER_ACTIVATED==0 ]; then
        info "main" "Calling the Translater."
        echo "Calling the Translater."
        $EXECUTABLES/translate
    fi

    sleep 11

    ((ITERATION++))
done