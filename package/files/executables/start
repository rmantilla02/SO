#!/bin/bash
export GRUPO=$HOME/Grupo06
export DIRCONF=$GRUPO/.dirconf
LOGFILE=start
source ./log

# REPORT IF SOMETHING GOES WRONG
function report() {
    echo -e "\e[1;31m$1\e[0m"
    echo -e "\e[1;31mTo repair the current system run './instalÄº -r'\e[0m"
}

while read LINE; do
    if [[ -z $LINE ]]; then continue; fi

    DIRS_KEY=$(echo "$LINE" | cut -d- -f1)
    DIRS_PATH=$(echo "$LINE" | cut -d- -f2)

    # SETEAR VARIABLES DE AMBIENTE
    case "$DIRS_KEY" in
        Executables) export EXECUTABLES=$DIRS_PATH;;
        Master) export MASTER=$DIRS_PATH;;
        Arrival) export ARRIVAL=$DIRS_PATH;;
        Accepted) export ACCEPTED=$DIRS_PATH;;
        Rejected) export REJECTED=$DIRS_PATH;;
        Processed) export PROCESSED=$DIRS_PATH;;
        Reports) export REPORTS=$DIRS_PATH;;
        Logs) export LOGS=$DIRS_PATH;;
    esac

done < "$HOME/Grupo06/.dirconf/installation.conf"

# VERIFYING DIRECTORIES
for DIRECTORY in EXECUTABLES MASTER ARRIVAL ACCEPTED REJECTED PROCESSED REPORTS LOGS; do
    if [ ! -v $DIRECTORY ]; then
        echo "There's no $DIRECTORY in the configuration file."
        error "main" "There's no $DIRECTORY in the configuration file."
    elif [ ! -d ${!DIRECTORY} ]; then
        report "$DIRECTORY directory doesn't exist."
        error "main" "$DIRECTORY directory doesn't exist."
    fi
done

# VERIFYING / UPDATING PERMISSIONS.
find "$MASTER" -type f -exec chmod u+r {} +
find "$EXECUTABLES" -type f -exec chmod u+x {} +
info "main" "Permissions changed in Master and Executables files."
echo "Permissions changed in Master and Executables files."

# EXPORTING VARIABLES
export GRUPO
info "main" "Variable GRUPO exported."
export DIRCONF
info "main" "Variable DIRCONF exported."
export EXECUTABLES
info "main" "Variable EXECUTABLES exported."
export MASTER
info "main" "Variable MASTER exported."
export ARRIVAL
info "main" "Variable ARRIVAL exported"
export ACCEPTED
info "main" "Variable ACCEPTED exported"
export REJECTED
info "main" "Variable REJECTED exported"
export PROCESSED
info "main" "Variable PROCESSED exported"
export REPORTS
info "main" "Variable REPORTS exported"
export LOGS
info "main" "Variable LOGS exported"

# STARTING DAEMON
$EXECUTABLES/detector &
export PID_DEMON=$!
echo "Daemon started with process ID $PID_DEMON."
